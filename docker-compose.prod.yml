version: '3.8'

services:
  # Main Application Service (Production)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: acquisitions-app-prod
    ports:
      - "${PORT:-3000}:3000"
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
    networks:
      - acquisitions-prod-network
    volumes:
      # Only mount logs for production monitoring
      - ./logs:/app/logs
      # Mount database migrations if needed
      - ./drizzle:/app/drizzle:ro
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # Optional: Reverse proxy for production (using Traefik)
  reverse-proxy:
    image: traefik:v3.0
    container_name: acquisitions-proxy
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.email=your-email@domain.com
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - acquisitions-prod-network
    profiles:
      - proxy  # Only start with --profile proxy
    restart: unless-stopped

  # Production monitoring (optional)
  monitoring:
    image: prom/prometheus:latest
    container_name: acquisitions-monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - acquisitions-prod-network
    profiles:
      - monitoring  # Only start with --profile monitoring
    restart: unless-stopped

networks:
  acquisitions-prod-network:
    driver: bridge
    name: acquisitions-prod-network

volumes:
  logs:
    driver: local
  letsencrypt:
    driver: local